{"name":"Dropboxpicker","tagline":"A simple framework to use a PickerViewController to select file from a DropBox Account","body":"DropBoxPicker\r\n=============\r\n\r\nA simple framework to use a PickerViewController to select file from a DropBox Account.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://github.com/TheLOTR/DropBoxPicker/raw/master/Pictures/Schermata1.png\" alt=\"Picture 1\" width=\"200\"/> &nbsp; <img src=\"https://github.com/TheLOTR/DropBoxPicker/raw/master/Pictures/Schermata2.png\" alt=\"Picture 2\" width=\"200\"/>\r\n</p>\r\n</center>\r\n<p align=\"center\">\r\n<img src=\"https://github.com/TheLOTR/DropBoxPicker/raw/master/Pictures/Schermata3.png\" alt=\"Picture 3\" width=\"420\"/>\r\n</p>\r\n</center>\r\n\r\n## Requirements\r\n\r\nDropBoxPicker works on any iOS version and is compatible with only ARC projects.  \r\n\r\nIt depends on the following Apple frameworks, which should already be included with most Xcode templates:  \r\n\r\n`Foundation.framework`  \r\n`UIKit.framework`  \r\n`CoreGraphics.framework`  \r\n`Security.framework`  \r\n`QuartzCore.framework`\r\n\r\nYou will need also to add `DropBoxSDK.framework`. This is the DropBox Core API SDK for ios.  \r\n\r\n## Adding DropBoxPicker to your project\r\n\r\nYou can add DropBoxPicker as a framework to your project or workspace.\r\n\r\nDownload the latest code version or add the repository as a git submodule to your git-tracked project.  \r\nOpen your project in Xcode, then drag and drop `DropBoxPicker.framework` onto your project in the Frameworks directory. You will need also to drag and drop the `DropBoxPicker.bundle` onto your project in the main bundle.\r\n\r\nInclude DropBoxPicker wherever you need it with `#import <DropBoxPicker/DropBoxPicker.h>`.\r\n\r\nFor the other configurations look at the DropBox Core API SDK Getting Started Guide.\r\n\r\n##Usage\r\n\r\n1. Ensure that your application is still linked with DropBox:\r\n\r\n  \t\tif (![[DBSession sharedSession] isLinked])\r\n\t\t\t\t[[DBSession sharedSession] linkFromController:self];\r\n\r\n2. The class that want to start the picker needs to implement the `DBPDropBoxPickerDelegate` like this:\r\n\r\n\t\t@interface ViewController : UIViewController <DBPDropBoxPickerDelegate>\r\n\r\n3. To call the picker you have to use the following code:\r\n\r\n\t\tDBPDropBoxPickerViewController *picker = [[DBPDropBoxPickerViewController alloc] initWithDropBoxPath:ROOT_PATH];\r\n\t\tpicker.delegate = self;\r\n\t\tUINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:picker];\r\n\t\t[self presentViewController:navController animated:YES completion:^{\r\n\t\t\r\n\t\t}];\r\n\r\n\t`ROOT_PATH` here, is a NSString that represent the dropbox path for the picker. When it starts, it is opened at this path.  \r\n\tYou can use  \r\n\t\t\r\n\t\t[[DBPDropBoxPickerViewController alloc] initWithDropBoxPath:@\"/\"]  \r\n\r\n\tfor the root path.\r\n\r\n4. You need also to implement the three methods of the `DBPDropBoxPickerDelegate`:\r\n\r\n\t\t- (void)errorChoosingFile:(DBPDropBoxPickerViewController *)picker\r\n\t\t{\r\n\t\t\tNSLog(@\"Error choosing file\");\r\n\t\t\t[[picker navigationController] dismissViewControllerAnimated:NO completion:^{\r\n\t\t\t\r\n\t\t\t}];\r\n\t\t}\r\n\t\t\r\n\t\t- (void)canceledOperation:(DBPDropBoxPickerViewController *)picker\r\n\t\t{\r\n\t\t\tNSLog(@\"Canceled operation\");\r\n\t\t\t[[picker navigationController] dismissViewControllerAnimated:NO completion:^{\r\n\t\t\t\r\n\t\t\t}];\r\n\t\t}\r\n\r\n\t\t- (void)dropBoxPickerController:(DBPDropBoxPickerViewController *)picker fileChoosedWithPath:(NSString *)dropBoxPath\r\n\t\t{\r\n\t\t\tNSLog(@\"File choosed with path %@\", dropBoxPath);\r\n\t\t\t[[picker navigationController] dismissViewControllerAnimated:NO completion:^{\r\n\t\t\t\r\n\t\t\t}];\r\n\t\t}\r\n\r\n\tThe first method, `errorChoosingFile:`, is called if there was an error with dropbox connection (meaby the application is not linked with the account).  \r\n\tThe second one, `canceledOperation:`, is called when the user tap the cancel button and close the picker.  \r\n\tAt last, the third one, `dropBoxPickerController: fileChoosedWithPath:`, is called when the user choose a file with the given dropBoxPath.  \r\n\tThen, you can use this path to download the file with the DropBoxSDK.\r\n\r\n## The Demo Project\r\nTake a look at the bundled demo project to see a very simple example.  \r\nYou have to change the `APP_KEY` and the `APP_SECRET` in the AppDelegate with yours.  \r\nYou need also to change the `APP_KEY` in the \"URL_Schemes\" in \"URL_Types\" property in the `Demo_Info.plist` file. If your `APP_KEY` is, for example, \"abcde12345\" and your `SECRET_KEY` is \"fghi6789\" you have to change the Demo Project like the pictures below).\r\n\r\n![Alt text](https://github.com/TheLOTR/DropBoxPicker/raw/master/Pictures/AppDelegate.png \"AppDelegate.m\")\r\n\r\n![Alt text](https://github.com/TheLOTR/DropBoxPicker/raw/master/Pictures/Demo-Info.plist.png \"Demo-Info.plist\")\r\n\r\n## License\r\n\r\nThis code is distributed under the terms and conditions of the [MIT license](LICENSE). \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}